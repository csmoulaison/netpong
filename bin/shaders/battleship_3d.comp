#version 430 core

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(std430, binding = 0) buffer in_color_buffer
{
	float colors[];
} color_buffer;

layout(std140, binding = 1) uniform in_ubo
{
	vec4 data[4];
	float time;
} ubo;

void main()
{
	vec3 position = ubo.data[0].xyz;

	ivec3 invocation = ivec3(gl_GlobalInvocationID.xyz);
	float color = 0.1f;
	if(position == invocation)
	{
		color = sin(ubo.time * 10.0f);
	}

	int buffer_index = invocation.z * 16 + invocation.y * 4 + invocation.x;

	color_buffer.colors[buffer_index] = color;
}
